{"ast":null,"code":"\"use strict\";\n\nvar __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar styled_components_1 = __importDefault(require(\"styled-components\"));\n\nvar theme_1 = __importDefault(require(\"../../theme/theme\"));\n\nvar ToggleContainer = styled_components_1.default.label(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\"], [\"\"])));\nvar ToggleBase = styled_components_1.default.span(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  position: relative;\\n  box-sizing: border-box;\\n  display: inline-grid;\\n  align-items: center;\\n  width: \", \";\\n  height: \", \";\\n  vertical-align: middle;\\n  margin: 0 4px;\\n\\n  input[type=\\\"checkbox\\\"] {\\n    position: absolute;\\n    margin-left: -9999px;\\n    visibility: hidden;\\n\\n    // off state\\n    & + label {\\n      display: inline-grid;\\n      box-sizing: border-box;\\n      align-items: center;\\n      outline: none;\\n      user-select: none;\\n      width: \", \";\\n      height: \", \";\\n      background-color: \", \";\\n      border-radius: \", \";\\n      cursor: pointer;\\n      transition: background ease-out 0.3s;\\n\\n      &:before {\\n        content: \\\"\\\";\\n        display: block;\\n        position: absolute;\\n        border-radius: \", \";\\n        width: calc(\\n          \", \" - 2 *\\n            \", \"\\n        );\\n        height: calc(\\n          \", \" - 2 *\\n            \", \"\\n        );\\n        background-color: \", \";\\n        left: \", \";\\n      }\\n\\n      &:after {\\n        display: block;\\n        position: absolute;\\n        content: \\\"\\\";\\n        width: \", \";\\n        height: \", \";\\n        border-radius: \", \";\\n        background-color: \", \";\\n        transition: all ease-out 0.4s;\\n        margin-left: \", \";\\n      }\\n    }\\n\\n    // on state\\n    &:checked {\\n      & + label {\\n        background-color: \", \";\\n\\n        &:before {\\n          background-color: \", \";\\n        }\\n\\n        &:after {\\n          margin-left: calc(\\n            100% - \", \" -\\n              \", \"\\n          );\\n          transition: all ease-out 0.2s;\\n          background-color: \", \";\\n        }\\n      }\\n\\n      &:disabled {\\n        & + label {\\n          background-color: \", \";\\n          &:after {\\n            box-shadow: none;\\n          }\\n        }\\n      }\\n    }\\n\\n    // disabled\\n    &:disabled {\\n      & + label {\\n        background-color: \", \";\\n        cursor: default;\\n        &:after {\\n          box-shadow: none;\\n          background-color: \", \";\\n        }\\n      }\\n    }\\n  }\\n\"], [\"\\n  position: relative;\\n  box-sizing: border-box;\\n  display: inline-grid;\\n  align-items: center;\\n  width: \", \";\\n  height: \", \";\\n  vertical-align: middle;\\n  margin: 0 4px;\\n\\n  input[type=\\\"checkbox\\\"] {\\n    position: absolute;\\n    margin-left: -9999px;\\n    visibility: hidden;\\n\\n    // off state\\n    & + label {\\n      display: inline-grid;\\n      box-sizing: border-box;\\n      align-items: center;\\n      outline: none;\\n      user-select: none;\\n      width: \", \";\\n      height: \", \";\\n      background-color: \", \";\\n      border-radius: \", \";\\n      cursor: pointer;\\n      transition: background ease-out 0.3s;\\n\\n      &:before {\\n        content: \\\"\\\";\\n        display: block;\\n        position: absolute;\\n        border-radius: \", \";\\n        width: calc(\\n          \", \" - 2 *\\n            \", \"\\n        );\\n        height: calc(\\n          \", \" - 2 *\\n            \", \"\\n        );\\n        background-color: \", \";\\n        left: \", \";\\n      }\\n\\n      &:after {\\n        display: block;\\n        position: absolute;\\n        content: \\\"\\\";\\n        width: \", \";\\n        height: \", \";\\n        border-radius: \", \";\\n        background-color: \", \";\\n        transition: all ease-out 0.4s;\\n        margin-left: \", \";\\n      }\\n    }\\n\\n    // on state\\n    &:checked {\\n      & + label {\\n        background-color: \", \";\\n\\n        &:before {\\n          background-color: \", \";\\n        }\\n\\n        &:after {\\n          margin-left: calc(\\n            100% - \", \" -\\n              \", \"\\n          );\\n          transition: all ease-out 0.2s;\\n          background-color: \", \";\\n        }\\n      }\\n\\n      &:disabled {\\n        & + label {\\n          background-color: \", \";\\n          &:after {\\n            box-shadow: none;\\n          }\\n        }\\n      }\\n    }\\n\\n    // disabled\\n    &:disabled {\\n      & + label {\\n        background-color: \", \";\\n        cursor: default;\\n        &:after {\\n          box-shadow: none;\\n          background-color: \", \";\\n        }\\n      }\\n    }\\n  }\\n\"])), function (p) {\n  return p.width || p.theme && p.theme.width || theme_1.default.width;\n}, function (p) {\n  return p.height || p.theme && p.theme.height || theme_1.default.height;\n}, function (p) {\n  return p.width || p.theme && p.theme.width || theme_1.default.width;\n}, function (p) {\n  return p.height || p.theme && p.theme.height || theme_1.default.height;\n}, function (p) {\n  return p.borderColor || p.leftBorderColor || p.theme && p.theme.leftBorderColor || theme_1.default.leftBorderColor;\n}, function (p) {\n  return p.radius || p.theme && p.theme.radius || theme_1.default.radius;\n}, function (p) {\n  return p.radiusBackground || p.theme && p.theme.radiusBackground || theme_1.default.radiusBackground;\n}, function (p) {\n  return p.width || p.theme && p.theme.width || theme_1.default.width;\n}, function (p) {\n  return p.borderWidth || p.theme && p.theme.borderWidth || theme_1.default.borderWidth;\n}, function (p) {\n  return p.height || p.theme && p.theme.height || theme_1.default.height;\n}, function (p) {\n  return p.borderWidth || p.theme && p.theme.borderWidth || theme_1.default.borderWidth;\n}, function (p) {\n  return p.backgroundColor || p.leftBackgroundColor || p.theme && p.theme.leftBackgroundColor || theme_1.default.leftBackgroundColor;\n}, function (p) {\n  return p.borderWidth || p.theme && p.theme.borderWidth || theme_1.default.borderWidth;\n}, function (p) {\n  return p.knobWidth || p.theme && p.theme.knobWidth || theme_1.default.knobWidth;\n}, function (p) {\n  return p.knobHeight || p.theme && p.theme.knobHeight || theme_1.default.knobHeight;\n}, function (p) {\n  return p.knobRadius || p.theme && p.theme.knobRadius || theme_1.default.knobRadius;\n}, function (p) {\n  return p.knobColor || p.leftKnobColor || p.theme && p.theme.leftKnobColor || theme_1.default.leftKnobColor;\n}, function (p) {\n  return p.knobGap || p.theme && p.theme.knobGap || theme_1.default.knobGap;\n}, function (p) {\n  return p.borderColor || p.rightBorderColor || p.theme && p.theme.rightBorderColor || theme_1.default.rightBorderColor;\n}, function (p) {\n  return p.backgroundColor || p.rightBackgroundColor || p.theme && p.theme.rightBackgroundColor || theme_1.default.rightBackgroundColor;\n}, function (p) {\n  return p.knobWidth || p.theme && p.theme.knobWidth || theme_1.default.knobWidth;\n}, function (p) {\n  return p.knobGap || p.theme && p.theme.knobGap || theme_1.default.knobGap;\n}, function (p) {\n  return p.knobColor || p.rightKnobColor || p.theme && p.theme.rightKnobColor || theme_1.default.rightKnobColor;\n}, function (p) {\n  return p.backgroundColorDisabled || p.theme && p.theme.backgroundColorDisabled || theme_1.default.backgroundColorDisabled;\n}, function (p) {\n  return p.backgroundColorDisabled || p.theme && p.theme.backgroundColorDisabled || theme_1.default.backgroundColorDisabled;\n}, function (p) {\n  return p.backgroundColorDisabled || p.theme && p.theme.backgroundColorDisabled || theme_1.default.backgroundColorDisabled;\n});\n\nvar Toggle = function (props, ref) {\n  var className = props.className,\n      name = props.name,\n      _a = props.checked,\n      checked = _a === void 0 ? false : _a,\n      _b = props.controlled,\n      controlled = _b === void 0 ? false : _b,\n      _c = props.disabled,\n      disabled = _c === void 0 ? false : _c,\n      _d = props.value,\n      value = _d === void 0 ? \"\" : _d,\n      _e = props.onToggle,\n      onToggle = _e === void 0 ? function () {\n    return true;\n  } : _e,\n      _f = props.onRight,\n      onRight = _f === void 0 ? function () {\n    return true;\n  } : _f,\n      _g = props.onLeft,\n      onLeft = _g === void 0 ? function () {\n    return true;\n  } : _g,\n      others = __rest(props, [\"className\", \"name\", \"checked\", \"controlled\", \"disabled\", \"value\", \"onToggle\", \"onRight\", \"onLeft\"]);\n\n  var cls = [\"react-toggle\", className || \"\"].join(\" \");\n\n  var onChangeHandler = function (e) {\n    if (!!onToggle) {\n      onToggle(e);\n      var target = e.target;\n\n      if (target && target.checked) {\n        onRight(e);\n      } else {\n        onLeft(e);\n      }\n    }\n  };\n\n  var checkedProp = function (controlled) {\n    return controlled ? {\n      checked: checked\n    } : {\n      defaultChecked: checked\n    };\n  };\n\n  return react_1.default.createElement(ToggleBase, __assign({\n    className: cls\n  }, others), react_1.default.createElement(\"input\", __assign({\n    ref: ref,\n    onChange: onChangeHandler,\n    type: \"checkbox\",\n    id: name,\n    name: name,\n    value: value,\n    disabled: disabled\n  }, checkedProp(controlled))), react_1.default.createElement(ToggleContainer, {\n    htmlFor: name\n  }));\n};\n\nexports.ToggleProps = Toggle;\nexports.default = react_1.forwardRef(Toggle);\nvar templateObject_1, templateObject_2;","map":{"version":3,"mappings":"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","names":["ToggleContainer","styled_components_1","label","templateObject_1","ToggleBase","span","templateObject_2","width","p","theme","theme_1","height","borderColor","leftBorderColor","radius","radiusBackground","borderWidth","backgroundColor","leftBackgroundColor","knobWidth","knobHeight","knobRadius","knobColor","leftKnobColor","knobGap","rightBorderColor","rightBackgroundColor","rightKnobColor","backgroundColorDisabled","Toggle","props","ref","name","_a","checked","_b","controlled","_c","disabled","_d","value","_e","onToggle","_f","onRight","_g","onLeft","others","cls","className","join","onChangeHandler","e","target","checkedProp","defaultChecked","react_1","__assign","onChange","type","id","htmlFor","exports"],"sources":["/Users/david/Desktop/bmi-calculator-main/node_modules/react-toggle-component/src/components/Toggle/index.tsx"],"sourcesContent":["import React, { forwardRef, FunctionComponent, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport defaultTheme from \"../../theme/theme\";\n\ninterface Props {\n  /**\n   * Addition CSS classes\n   */\n  className?: string;\n  /**\n   * Name of checkbox. You should alway assign a name\n   *\n   * @requires true\n   */\n  name?: string;\n  /**\n   * Value used when you'll post data\n   *\n   * @default\n   */\n  value?: string;\n  /**\n   * State of checked\n   *\n   * @default false\n   */\n  checked?: boolean;\n  /**\n   * Controls whether the checked prop is controlled (passed to the `checked` prop on input) or not (passed to the `defautlChecked` prop on input)\n   *\n   * @default false\n   */\n  controlled?: boolean;\n  /**\n   * Disable the toogle\n   *\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * Trigged when the toggle change\n   *\n   * @param {React.ChangeEvent} e\n   */\n  onToggle?: (e: React.ChangeEvent) => void;\n  /**\n   * Trigged when the toggle is on the left.\n   */\n  onRight?: (e: React.ChangeEvent) => void;\n  /**\n   * Trigged when the toggle is on the right.\n   */\n  onLeft?: (e: React.ChangeEvent) => void;\n\n  // ---------------------------------------------------------------\n  // Appearance\n  // ---------------------------------------------------------------\n\n  /**\n   * Width of component\n   */\n  width?: string;\n  /**\n   * Height of component\n   */\n  height?: string;\n\n  // ---------------------------------------------------------------\n  // Border\n  // ---------------------------------------------------------------\n\n  /**\n   * Border width\n   */\n  borderWidth?: string;\n  /**\n   * Border color for both knob position. This props will override leftBorderColor and rightBorderColor props\n   */\n  borderColor?: string;\n  /**\n   * Border color when the knob is on the left (usually off)\n   */\n  leftBorderColor?: string;\n  /**\n   * Border color when the knob is on the right (usually on)\n   */\n  rightBorderColor?: string;\n\n  // ---------------------------------------------------------------\n  // Background color\n  // ---------------------------------------------------------------\n\n  /**\n   * Background color for both knob position. This props will override leftBackgroundColor and rightBackgroundColor props\n   */\n  backgroundColor?: string;\n  /**\n   * Background color when the knob is on the left (usually off)\n   */\n  leftBackgroundColor?: string;\n  /**\n   * Background color when the knob is on the right (usually on)\n   */\n  rightBackgroundColor?: string;\n\n  /**\n   * Background color when the toggle is disabled\n   */\n  backgroundColorDisabled?: string;\n\n  // ---------------------------------------------------------------\n  // Radius\n  // ---------------------------------------------------------------\n\n  /**\n   * Radius of container\n   *\n   */\n  radius?: string;\n  /**\n   * Radius of gap\n   */\n  radiusBackground?: string;\n  /**\n   * Border radius of knob\n   */\n  knobRadius?: string;\n\n  // ---------------------------------------------------------------\n  // Knob\n  // ---------------------------------------------------------------\n\n  /**\n   * Knob width\n   */\n  knobWidth?: string;\n  /**\n   * Knob height\n   */\n  knobHeight?: string;\n  /**\n   * Knob gap. It's the distance from the border/background\n   */\n  knobGap?: string;\n  /**\n   * Knob color for both knob position. This props will override the leftKnobColor and rightKnobColor\n   */\n  knobColor?: string;\n  /**\n   * Knob color when it's on the left (usually off)\n   */\n  leftKnobColor?: string;\n  /**\n   * Knob color when it's on the right (usually on)\n   */\n  rightKnobColor?: string;\n}\n\nconst ToggleContainer = styled.label``;\n\nconst ToggleBase = styled.span<Props>`\n  position: relative;\n  box-sizing: border-box;\n  display: inline-grid;\n  align-items: center;\n  width: ${p => p.width || (p.theme && p.theme.width) || defaultTheme.width};\n  height: ${p => p.height || (p.theme && p.theme.height) || defaultTheme.height};\n  vertical-align: middle;\n  margin: 0 4px;\n\n  input[type=\"checkbox\"] {\n    position: absolute;\n    margin-left: -9999px;\n    visibility: hidden;\n\n    // off state\n    & + label {\n      display: inline-grid;\n      box-sizing: border-box;\n      align-items: center;\n      outline: none;\n      user-select: none;\n      width: ${p => p.width || (p.theme && p.theme.width) || defaultTheme.width};\n      height: ${p => p.height || (p.theme && p.theme.height) || defaultTheme.height};\n      background-color: ${p =>\n        p.borderColor || p.leftBorderColor || (p.theme && p.theme.leftBorderColor) || defaultTheme.leftBorderColor};\n      border-radius: ${p => p.radius || (p.theme && p.theme.radius) || defaultTheme.radius};\n      cursor: pointer;\n      transition: background ease-out 0.3s;\n\n      &:before {\n        content: \"\";\n        display: block;\n        position: absolute;\n        border-radius: ${p =>\n          p.radiusBackground || (p.theme && p.theme.radiusBackground) || defaultTheme.radiusBackground};\n        width: calc(\n          ${p => p.width || (p.theme && p.theme.width) || defaultTheme.width} - 2 *\n            ${p => p.borderWidth || (p.theme && p.theme.borderWidth) || defaultTheme.borderWidth}\n        );\n        height: calc(\n          ${p => p.height || (p.theme && p.theme.height) || defaultTheme.height} - 2 *\n            ${p => p.borderWidth || (p.theme && p.theme.borderWidth) || defaultTheme.borderWidth}\n        );\n        background-color: ${p =>\n          p.backgroundColor ||\n          p.leftBackgroundColor ||\n          (p.theme && p.theme.leftBackgroundColor) ||\n          defaultTheme.leftBackgroundColor};\n        left: ${p => p.borderWidth || (p.theme && p.theme.borderWidth) || defaultTheme.borderWidth};\n      }\n\n      &:after {\n        display: block;\n        position: absolute;\n        content: \"\";\n        width: ${p => p.knobWidth || (p.theme && p.theme.knobWidth) || defaultTheme.knobWidth};\n        height: ${p => p.knobHeight || (p.theme && p.theme.knobHeight) || defaultTheme.knobHeight};\n        border-radius: ${p => p.knobRadius || (p.theme && p.theme.knobRadius) || defaultTheme.knobRadius};\n        background-color: ${p =>\n          p.knobColor || p.leftKnobColor || (p.theme && p.theme.leftKnobColor) || defaultTheme.leftKnobColor};\n        transition: all ease-out 0.4s;\n        margin-left: ${p => p.knobGap || (p.theme && p.theme.knobGap) || defaultTheme.knobGap};\n      }\n    }\n\n    // on state\n    &:checked {\n      & + label {\n        background-color: ${p =>\n          p.borderColor ||\n          p.rightBorderColor ||\n          (p.theme && p.theme.rightBorderColor) ||\n          defaultTheme.rightBorderColor};\n\n        &:before {\n          background-color: ${p =>\n            p.backgroundColor ||\n            p.rightBackgroundColor ||\n            (p.theme && p.theme.rightBackgroundColor) ||\n            defaultTheme.rightBackgroundColor};\n        }\n\n        &:after {\n          margin-left: calc(\n            100% - ${p => p.knobWidth || (p.theme && p.theme.knobWidth) || defaultTheme.knobWidth} -\n              ${p => p.knobGap || (p.theme && p.theme.knobGap) || defaultTheme.knobGap}\n          );\n          transition: all ease-out 0.2s;\n          background-color: ${p =>\n            p.knobColor || p.rightKnobColor || (p.theme && p.theme.rightKnobColor) || defaultTheme.rightKnobColor};\n        }\n      }\n\n      &:disabled {\n        & + label {\n          background-color: ${p =>\n            p.backgroundColorDisabled ||\n            (p.theme && p.theme.backgroundColorDisabled) ||\n            defaultTheme.backgroundColorDisabled};\n          &:after {\n            box-shadow: none;\n          }\n        }\n      }\n    }\n\n    // disabled\n    &:disabled {\n      & + label {\n        background-color: ${p =>\n          p.backgroundColorDisabled ||\n          (p.theme && p.theme.backgroundColorDisabled) ||\n          defaultTheme.backgroundColorDisabled};\n        cursor: default;\n        &:after {\n          box-shadow: none;\n          background-color: ${p =>\n            p.backgroundColorDisabled ||\n            (p.theme && p.theme.backgroundColorDisabled) ||\n            defaultTheme.backgroundColorDisabled};\n        }\n      }\n    }\n  }\n`;\n\nconst Toggle: FunctionComponent<Props> = (props, ref) => {\n  const {\n    className,\n    name,\n    checked = false,\n    controlled = false,\n    disabled = false,\n    value = \"\",\n    onToggle = () => true,\n    onRight = () => true,\n    onLeft = () => true,\n    ...others\n  } = props;\n\n  const cls = [\"react-toggle\", className || \"\"].join(\" \");\n\n  const onChangeHandler = (e: React.ChangeEvent) => {\n    if (!!onToggle) {\n      onToggle(e);\n\n      const target = e.target as HTMLInputElement;\n\n      if (target && target.checked) {\n        onRight(e);\n      } else {\n        onLeft(e);\n      }\n    }\n  };\n\n  const checkedProp = (controlled: boolean) => {\n    return controlled ? { checked } : { defaultChecked: checked };\n  };\n\n  return (\n    <ToggleBase className={cls} {...others}>\n      <input\n        ref={ref}\n        onChange={onChangeHandler}\n        type={\"checkbox\"}\n        id={name}\n        name={name}\n        value={value}\n        disabled={disabled}\n        {...checkedProp(controlled)}\n      />\n      <ToggleContainer htmlFor={name} />\n    </ToggleBase>\n  );\n};\n\nexport { Toggle as ToggleProps };\nexport default forwardRef(Toggle);\n"]},"metadata":{},"sourceType":"script"}