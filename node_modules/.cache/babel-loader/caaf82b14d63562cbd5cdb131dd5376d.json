{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/bmi-calculator-main/src/components/Calculator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport style from './Calculator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calculator() {\n  _s();\n\n  const {\n    Group,\n    Control,\n    Label\n  } = Form;\n  const [weight, setWeight] = useState(null);\n  const [height, setHeight] = useState(null);\n  const [bmi, setBmi] = useState('');\n  const [message, setMessage] = useState('');\n  const [healthyWeight, setHealthyWeight] = useState('');\n  const [range, setRange] = useState('');\n\n  const calBmi = e => {\n    const container = document.getElementById('container');\n    const messageEl = document.getElementById('message-el');\n\n    if (weight === null || height === null) {\n      return;\n    }\n\n    let heightInMeter = (height / 100).toFixed(2);\n    let bmi = weight / (heightInMeter * heightInMeter); //min normal bmi value\n\n    let minBmi = 18.5; //max normal bmi value\n\n    let maxBmi = 25; // min weight required for underweight category for normal weight \n\n    let minWeightCal = minBmi * (heightInMeter * heightInMeter);\n    let minWeight = Math.ceil(minWeightCal * 100) / 100; // min weight required for overweight category for normal weight\n\n    let maxWeightCal = maxBmi * (heightInMeter * heightInMeter);\n    let maxWeight = Math.floor(maxWeightCal * 100) / 100;\n    let reqWeightCal = 0;\n    let reqWeight = 0;\n    setBmi(bmi.toFixed(1));\n    setRange(`${minWeight} - ${maxWeight}`); // bmi check for underweight\n\n    if (bmi >= 9 && bmi < 18.5) {\n      if (bmi >= 9 && bmi < 15) {\n        setMessage('very severely underweight');\n      } else if (bmi >= 15 && bmi < 16) {\n        setMessage('severely underweight');\n      } else {\n        setMessage('underweight');\n      }\n\n      reqWeightCal = minWeight - weight;\n      reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n      setHealthyWeight(`+${reqWeight} kgs for healthy weight`);\n      setRange(`${minWeight} - ${maxWeight}`);\n      container.className = '';\n      container.classList.add('bg-warning');\n      messageEl.className = '';\n      messageEl.classList.add('text-warning');\n    } // bmi check for normal\n    else if (bmi >= 18.5 && bmi <= 25) {\n      setMessage('normal');\n      setHealthyWeight(`Healthy weight`);\n      container.className = '';\n      container.classList.add('bg-success');\n      messageEl.className = '';\n      messageEl.classList.add('text-success');\n    } // bmi check for overweight\n    else if (bmi > 25 && bmi < 50) {\n      if (bmi > 25 && bmi < 30) {\n        setMessage('overweight');\n      } else if (bmi >= 30 && bmi < 35) {\n        setMessage('obese Class I');\n      } else if (bmi >= 35 && bmi < 40) {\n        setMessage('obese Class II');\n      } else {\n        setMessage('obese Class III');\n      }\n\n      reqWeightCal = weight - maxWeight;\n      reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n      setHealthyWeight(`-${reqWeight} kgs for healthy weight`);\n      setRange(`${minWeight} - ${maxWeight}`);\n      container.className = '';\n      container.classList.add('bg-danger');\n      messageEl.className = '';\n      messageEl.classList.add('text-danger');\n    } else {\n      setBmi('');\n      setMessage('');\n      setHealthyWeight('');\n      setRange('');\n      container.className = '';\n      container.classList.add('bg-primary');\n      messageEl.className = '';\n      messageEl.classList.add('text-primary');\n    }\n  };\n\n  useEffect(() => {\n    calBmi();\n  }, [weight, height]);\n\n  const Switch = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"react-switch-checkbox\",\n        id: `react-switch-new`,\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"react-switch-label\",\n        htmlFor: `react-switch-new`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `react-switch-button`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"26rem\"\n      },\n      border: \"light\",\n      className: \"p-4 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-3\",\n        children: \"BMI Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mb-3 px-3\",\n        id: \"bmiForm\",\n        children: [/*#__PURE__*/_jsxDEV(Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Weight (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Control, {\n            value: weight,\n            onChange: e => setWeight(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Group, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Height (cm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Control, {\n            value: height,\n            onChange: e => setHeight(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-0\",\n          children: \"BMI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: style.font,\n          children: bmi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lead\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"message-el\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: healthyWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: range\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calculator, \"+EkIzzQdy9VNaojTeFlZtwJxtnM=\");\n\n_c = Calculator;\nexport default Calculator;\n/**\n * Enable metrics toggling\n * Research BMI range\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","style","Calculator","Group","Control","Label","weight","setWeight","height","setHeight","bmi","setBmi","message","setMessage","healthyWeight","setHealthyWeight","range","setRange","calBmi","e","container","document","getElementById","messageEl","heightInMeter","toFixed","minBmi","maxBmi","minWeightCal","minWeight","Math","ceil","maxWeightCal","maxWeight","floor","reqWeightCal","reqWeight","className","classList","add","Switch","width","target","value","font"],"sources":["/Users/david/Desktop/bmi-calculator-main/src/components/Calculator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card, Form } from 'react-bootstrap'\nimport style from './Calculator.module.css'\n\n\nfunction Calculator() {\n    const { Group, Control, Label } = Form\n\n    const [weight, setWeight] = useState(null)\n    const [height, setHeight] = useState(null)\n    const [bmi, setBmi] = useState('')\n    const [message, setMessage] = useState('')\n    const [healthyWeight, setHealthyWeight] = useState('')\n    const [range, setRange] = useState('')\n    \n    const calBmi = (e) => {\n\n        const container = document.getElementById('container')\n        const messageEl = document.getElementById('message-el')\n        \n        if(weight === null || height === null) {\n            return;\n        }\n\n        let heightInMeter = (height / 100).toFixed(2)\n        let bmi = (weight /(heightInMeter * heightInMeter))\n        //min normal bmi value\n        let minBmi = 18.5\n        //max normal bmi value\n        let maxBmi = 25\n        // min weight required for underweight category for normal weight \n        let minWeightCal = (minBmi * (heightInMeter * heightInMeter))\n        let minWeight = Math.ceil(minWeightCal * 100) / 100\n        // min weight required for overweight category for normal weight\n        let maxWeightCal = (maxBmi * (heightInMeter * heightInMeter))\n        let maxWeight = Math.floor(maxWeightCal * 100) / 100\n        let reqWeightCal = 0\n        let reqWeight = 0\n        setBmi(bmi.toFixed(1))\n        setRange(`${minWeight} - ${maxWeight}`)\n\n        // bmi check for underweight\n        if(bmi >= 9 && bmi < 18.5) {\n            if( bmi >= 9 && bmi < 15) {\n                setMessage('very severely underweight')\n            }\n            else if (bmi >= 15 && bmi < 16) {\n                setMessage('severely underweight')\n            }\n            else{\n                setMessage('underweight')\n            }\n            reqWeightCal = minWeight - weight\n            reqWeight =  ((reqWeightCal * 100) / 100).toFixed(2)\n            setHealthyWeight(`+${reqWeight} kgs for healthy weight`)\n            setRange(`${minWeight} - ${maxWeight}`)\n            container.className = ''\n            container.classList.add('bg-warning')\n            messageEl.className = ''\n            messageEl.classList.add('text-warning')\n        }\n        // bmi check for normal\n        else if(bmi >= 18.5 && bmi <= 25) {\n            setMessage('normal')\n            setHealthyWeight(`Healthy weight`)\n            container.className = ''\n            container.classList.add('bg-success')\n            messageEl.className = ''\n            messageEl.classList.add('text-success')\n        }\n        // bmi check for overweight\n        else if(bmi > 25 && bmi < 50) {\n            if (bmi > 25 && bmi < 30){\n                setMessage('overweight')\n            } \n            else if(bmi >= 30 && bmi < 35) {\n                setMessage('obese Class I')\n            }\n            else if(bmi >= 35 && bmi < 40) {\n                setMessage('obese Class II')\n            }\n            else {\n                setMessage('obese Class III')\n            }\n            reqWeightCal = weight - maxWeight\n            reqWeight =  ((reqWeightCal * 100) / 100).toFixed(2)\n            setHealthyWeight(`-${reqWeight} kgs for healthy weight`)\n            setRange(`${minWeight} - ${maxWeight}`)\n            container.className = ''\n            container.classList.add('bg-danger')\n            messageEl.className = ''\n            messageEl.classList.add('text-danger')\n        }\n        else {\n            setBmi('')\n            setMessage('')\n            setHealthyWeight('')\n            setRange('')\n            container.className = ''\n            container.classList.add('bg-primary')\n            messageEl.className = ''\n            messageEl.classList.add('text-primary')\n        }\n        \n    }\n\n    useEffect(() => {\n        calBmi();\n      }, [weight, height]);\n      \n      const Switch = () => {\n        return (\n          <>\n            <input\n              className=\"react-switch-checkbox\"\n              id={`react-switch-new`}\n              type=\"checkbox\"\n            />\n            <label\n              className=\"react-switch-label\"\n              htmlFor={`react-switch-new`}\n            >\n              <span className={`react-switch-button`} />\n            </label>\n          </>\n        );\n      };  \n    return (\n        <>  \n            <Switch/>\n            <Card style={{ width: \"26rem\" }} border='light' className='p-4 shadow'>\n                <h2 className='text-center mb-3'>BMI Calculator</h2>\n                <Form className='mb-3 px-3' id='bmiForm'>\n                    <Group className='mb-3'>\n                        <Label>Weight (kg)</Label>\n                        <Control value={weight} onChange={(e) => setWeight(e.target.value)} />\n                    </Group>\n                    <Group className='mb-4'>\n                        <Label>Height (cm)</Label>\n                        <Control value={height} onChange={(e) => setHeight(e.target.value)} />\n                    </Group>\n                </Form>\n                <div className='text-center'>\n                    <h3 className='mb-0'>BMI</h3>\n                    <h3 className={style.font}>{bmi}</h3>\n                    <div className=\"lead\">\n                        <div id='message-el'>\n                            <h5>{message}</h5>\n                        </div>\n                            <h6>{ healthyWeight }</h6>\n                            <h6>{ range }</h6>\n                    </div>\n                </div>\n            </Card>\n        </>\n    )\n}\n\nexport default Calculator\n\n/**\n * Enable metrics toggling\n * Research BMI range\n */"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;;AAGA,SAASC,UAAT,GAAsB;EAAA;;EAClB,MAAM;IAAEC,KAAF;IAASC,OAAT;IAAkBC;EAAlB,IAA4BL,IAAlC;EAEA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMqB,MAAM,GAAIC,CAAD,IAAO;IAElB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;IACA,MAAMC,SAAS,GAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;;IAEA,IAAGhB,MAAM,KAAK,IAAX,IAAmBE,MAAM,KAAK,IAAjC,EAAuC;MACnC;IACH;;IAED,IAAIgB,aAAa,GAAG,CAAChB,MAAM,GAAG,GAAV,EAAeiB,OAAf,CAAuB,CAAvB,CAApB;IACA,IAAIf,GAAG,GAAIJ,MAAM,IAAGkB,aAAa,GAAGA,aAAnB,CAAjB,CAVkB,CAWlB;;IACA,IAAIE,MAAM,GAAG,IAAb,CAZkB,CAalB;;IACA,IAAIC,MAAM,GAAG,EAAb,CAdkB,CAelB;;IACA,IAAIC,YAAY,GAAIF,MAAM,IAAIF,aAAa,GAAGA,aAApB,CAA1B;IACA,IAAIK,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,YAAY,GAAG,GAAzB,IAAgC,GAAhD,CAjBkB,CAkBlB;;IACA,IAAII,YAAY,GAAIL,MAAM,IAAIH,aAAa,GAAGA,aAApB,CAA1B;IACA,IAAIS,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAWF,YAAY,GAAG,GAA1B,IAAiC,GAAjD;IACA,IAAIG,YAAY,GAAG,CAAnB;IACA,IAAIC,SAAS,GAAG,CAAhB;IACAzB,MAAM,CAACD,GAAG,CAACe,OAAJ,CAAY,CAAZ,CAAD,CAAN;IACAR,QAAQ,CAAE,GAAEY,SAAU,MAAKI,SAAU,EAA7B,CAAR,CAxBkB,CA0BlB;;IACA,IAAGvB,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,IAArB,EAA2B;MACvB,IAAIA,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAG,EAAtB,EAA0B;QACtBG,UAAU,CAAC,2BAAD,CAAV;MACH,CAFD,MAGK,IAAIH,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,EAAvB,EAA2B;QAC5BG,UAAU,CAAC,sBAAD,CAAV;MACH,CAFI,MAGD;QACAA,UAAU,CAAC,aAAD,CAAV;MACH;;MACDsB,YAAY,GAAGN,SAAS,GAAGvB,MAA3B;MACA8B,SAAS,GAAI,CAAED,YAAY,GAAG,GAAhB,GAAuB,GAAxB,EAA6BV,OAA7B,CAAqC,CAArC,CAAb;MACAV,gBAAgB,CAAE,IAAGqB,SAAU,yBAAf,CAAhB;MACAnB,QAAQ,CAAE,GAAEY,SAAU,MAAKI,SAAU,EAA7B,CAAR;MACAb,SAAS,CAACiB,SAAV,GAAsB,EAAtB;MACAjB,SAAS,CAACkB,SAAV,CAAoBC,GAApB,CAAwB,YAAxB;MACAhB,SAAS,CAACc,SAAV,GAAsB,EAAtB;MACAd,SAAS,CAACe,SAAV,CAAoBC,GAApB,CAAwB,cAAxB;IACH,CAlBD,CAmBA;IAnBA,KAoBK,IAAG7B,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,EAAzB,EAA6B;MAC9BG,UAAU,CAAC,QAAD,CAAV;MACAE,gBAAgB,CAAE,gBAAF,CAAhB;MACAK,SAAS,CAACiB,SAAV,GAAsB,EAAtB;MACAjB,SAAS,CAACkB,SAAV,CAAoBC,GAApB,CAAwB,YAAxB;MACAhB,SAAS,CAACc,SAAV,GAAsB,EAAtB;MACAd,SAAS,CAACe,SAAV,CAAoBC,GAApB,CAAwB,cAAxB;IACH,CAPI,CAQL;IARK,KASA,IAAG7B,GAAG,GAAG,EAAN,IAAYA,GAAG,GAAG,EAArB,EAAyB;MAC1B,IAAIA,GAAG,GAAG,EAAN,IAAYA,GAAG,GAAG,EAAtB,EAAyB;QACrBG,UAAU,CAAC,YAAD,CAAV;MACH,CAFD,MAGK,IAAGH,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,EAAtB,EAA0B;QAC3BG,UAAU,CAAC,eAAD,CAAV;MACH,CAFI,MAGA,IAAGH,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,EAAtB,EAA0B;QAC3BG,UAAU,CAAC,gBAAD,CAAV;MACH,CAFI,MAGA;QACDA,UAAU,CAAC,iBAAD,CAAV;MACH;;MACDsB,YAAY,GAAG7B,MAAM,GAAG2B,SAAxB;MACAG,SAAS,GAAI,CAAED,YAAY,GAAG,GAAhB,GAAuB,GAAxB,EAA6BV,OAA7B,CAAqC,CAArC,CAAb;MACAV,gBAAgB,CAAE,IAAGqB,SAAU,yBAAf,CAAhB;MACAnB,QAAQ,CAAE,GAAEY,SAAU,MAAKI,SAAU,EAA7B,CAAR;MACAb,SAAS,CAACiB,SAAV,GAAsB,EAAtB;MACAjB,SAAS,CAACkB,SAAV,CAAoBC,GAApB,CAAwB,WAAxB;MACAhB,SAAS,CAACc,SAAV,GAAsB,EAAtB;MACAd,SAAS,CAACe,SAAV,CAAoBC,GAApB,CAAwB,aAAxB;IACH,CArBI,MAsBA;MACD5B,MAAM,CAAC,EAAD,CAAN;MACAE,UAAU,CAAC,EAAD,CAAV;MACAE,gBAAgB,CAAC,EAAD,CAAhB;MACAE,QAAQ,CAAC,EAAD,CAAR;MACAG,SAAS,CAACiB,SAAV,GAAsB,EAAtB;MACAjB,SAAS,CAACkB,SAAV,CAAoBC,GAApB,CAAwB,YAAxB;MACAhB,SAAS,CAACc,SAAV,GAAsB,EAAtB;MACAd,SAAS,CAACe,SAAV,CAAoBC,GAApB,CAAwB,cAAxB;IACH;EAEJ,CAzFD;;EA2FAzC,SAAS,CAAC,MAAM;IACZoB,MAAM;EACP,CAFM,EAEJ,CAACZ,MAAD,EAASE,MAAT,CAFI,CAAT;;EAIE,MAAMgC,MAAM,GAAG,MAAM;IACnB,oBACE;MAAA,wBACE;QACE,SAAS,EAAC,uBADZ;QAEE,EAAE,EAAG,kBAFP;QAGE,IAAI,EAAC;MAHP;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QACE,SAAS,EAAC,oBADZ;QAEE,OAAO,EAAG,kBAFZ;QAAA,uBAIE;UAAM,SAAS,EAAG;QAAlB;UAAA;UAAA;UAAA;QAAA;MAJF;QAAA;QAAA;QAAA;MAAA,QANF;IAAA,gBADF;EAeD,CAhBD;;EAiBF,oBACI;IAAA,wBACI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAT,CAAb;MAAiC,MAAM,EAAC,OAAxC;MAAgD,SAAS,EAAC,YAA1D;MAAA,wBACI;QAAI,SAAS,EAAC,kBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,IAAD;QAAM,SAAS,EAAC,WAAhB;QAA4B,EAAE,EAAC,SAA/B;QAAA,wBACI,QAAC,KAAD;UAAO,SAAS,EAAC,MAAjB;UAAA,wBACI,QAAC,KAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,OAAD;YAAS,KAAK,EAAEnC,MAAhB;YAAwB,QAAQ,EAAGa,CAAD,IAAOZ,SAAS,CAACY,CAAC,CAACuB,MAAF,CAASC,KAAV;UAAlD;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI,QAAC,KAAD;UAAO,SAAS,EAAC,MAAjB;UAAA,wBACI,QAAC,KAAD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,OAAD;YAAS,KAAK,EAAEnC,MAAhB;YAAwB,QAAQ,EAAGW,CAAD,IAAOV,SAAS,CAACU,CAAC,CAACuB,MAAF,CAASC,KAAV;UAAlD;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAYI;QAAK,SAAS,EAAC,aAAf;QAAA,wBACI;UAAI,SAAS,EAAC,MAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAI,SAAS,EAAE1C,KAAK,CAAC2C,IAArB;UAAA,UAA4BlC;QAA5B;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAK,SAAS,EAAC,MAAf;UAAA,wBACI;YAAK,EAAE,EAAC,YAAR;YAAA,uBACI;cAAA,UAAKE;YAAL;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAIQ;YAAA,UAAME;UAAN;YAAA;YAAA;YAAA;UAAA,QAJR,eAKQ;YAAA,UAAME;UAAN;YAAA;YAAA;YAAA;UAAA,QALR;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AA6BH;;GAvJQd,U;;KAAAA,U;AAyJT,eAAeA,UAAf;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}