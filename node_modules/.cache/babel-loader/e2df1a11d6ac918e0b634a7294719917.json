{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/bmi-calculator-main/src/components/Calculator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form, Button } from 'react-bootstrap';\nimport style from './Calculator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calculator() {\n  _s();\n\n  const {\n    Group,\n    Control,\n    Label\n  } = Form;\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [bmi, setBmi] = useState('');\n  const [message, setMessage] = useState('');\n  const [healthyWeight, setHealthyWeight] = useState('');\n  const [range, setRange] = useState('');\n\n  const calBmi = e => {\n    const container = document.getElementById('container');\n    const messageEl = document.getElementById('message-el');\n\n    if (weight === 0 || height === 0) {\n      return;\n    } else {\n      alert(\"oops\");\n      let heightInMeter = (height / 100).toFixed(2);\n      let bmi = weight / (heightInMeter * heightInMeter); //min normal bmi value\n\n      let minBmi = 18.5; //max normal bmi value\n\n      let maxBmi = 25; // min weight required for underweight category for normal weight \n\n      let minWeightCal = minBmi * (heightInMeter * heightInMeter);\n      let minWeight = Math.ceil(minWeightCal * 100) / 100; // min weight required for overweight category for normal weight\n\n      let maxWeightCal = maxBmi * (heightInMeter * heightInMeter);\n      let maxWeight = Math.floor(maxWeightCal * 100) / 100;\n      let reqWeightCal = 0;\n      let reqWeight = 0;\n      setBmi(bmi.toFixed(1)); // bmi check for underweight\n\n      if (bmi >= 9 && bmi < 18.5) {\n        if (bmi >= 9 && bmi < 15) {\n          setMessage('very severely underweight');\n          reqWeightCal = minWeight - weight;\n          reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n          setHealthyWeight(`+${reqWeight} kgs for healthy weight`);\n          setRange(`${minWeight} - ${maxWeight}`);\n          container.className = '';\n          container.classList.add('bg-warning');\n          messageEl.className = '';\n          messageEl.classList.add('text-warning');\n        } else if (bmi >= 15 && bmi < 16) {\n          setMessage('severely underweight');\n          reqWeightCal = minWeight - weight;\n          reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n          setHealthyWeight(`+${reqWeight} kgs for healthy weight`);\n          setRange(`${minWeight} - ${maxWeight}`);\n          container.className = '';\n          container.classList.add('bg-warning');\n          messageEl.className = '';\n          messageEl.classList.add('text-warning');\n        } else {\n          setMessage('underweight');\n          reqWeightCal = minWeight - weight;\n          reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n          setHealthyWeight(`+${reqWeight} kgs for healthy weight`);\n          setRange(`${minWeight} - ${maxWeight}`);\n          container.className = '';\n          container.classList.add('bg-warning');\n          messageEl.className = '';\n          messageEl.classList.add('text-warning');\n        }\n      } // bmi check for normal\n      else if (bmi >= 18.5 && bmi <= 25) {\n        setMessage('normal');\n        setHealthyWeight(`Healthy weight`);\n        setRange(`${minWeight} - ${maxWeight}`);\n        container.className = '';\n        container.classList.add('bg-success');\n        messageEl.className = '';\n        messageEl.classList.add('text-success');\n      } // bmi check for overweight\n      else if (bmi > 25 && bmi < 50) {\n        if (bmi > 25 && bmi < 30) {\n          setMessage('overweight');\n          reqWeightCal = weight - maxWeight;\n          reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n          setHealthyWeight(`-${reqWeight} kgs for healthy weight`);\n          setRange(`${minWeight} - ${maxWeight}`);\n          container.className = '';\n          container.classList.add('bg-danger');\n          messageEl.className = '';\n          messageEl.classList.add('text-danger');\n        } else if (bmi >= 30 && bmi < 35) {\n          setMessage('obese Class I');\n          reqWeightCal = weight - maxWeight;\n          reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n          setHealthyWeight(`-${reqWeight} kgs for healthy weight`);\n          setRange(`${minWeight} - ${maxWeight}`);\n          container.className = '';\n          container.classList.add('bg-danger');\n          messageEl.className = '';\n          messageEl.classList.add('text-danger');\n        } else if (bmi >= 35 && bmi < 40) {\n          setMessage('obese Class II');\n          reqWeightCal = weight - maxWeight;\n          reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n          setHealthyWeight(`-${reqWeight} kgs for healthy weight`);\n          setRange(`${minWeight} - ${maxWeight}`);\n          container.className = '';\n          container.classList.add('bg-danger');\n          messageEl.className = '';\n          messageEl.classList.add('text-danger');\n        } else {\n          setMessage('obese Class III');\n          reqWeightCal = weight - maxWeight;\n          reqWeight = (reqWeightCal * 100 / 100).toFixed(2);\n          setHealthyWeight(`-${reqWeight} kgs for healthy weight`);\n          setRange(`${minWeight} - ${maxWeight}`);\n          container.className = '';\n          container.classList.add('bg-danger');\n          messageEl.className = '';\n          messageEl.classList.add('text-danger');\n        }\n      } else {\n        setBmi('');\n        setMessage('');\n        setHealthyWeight('');\n        setRange('');\n      }\n    }\n  };\n\n  useEffect(() => {\n    calBmi();\n  }, [weight, height]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"26rem\"\n      },\n      border: \"light\",\n      className: \"p-4 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-3\",\n        children: \"BMI Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mb-3 px-3\",\n        onSubmit: calBmi,\n        id: \"bmiForm\",\n        children: [/*#__PURE__*/_jsxDEV(Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Weight (kg)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Control, {\n            value: weight,\n            onChange: e => setWeight(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Group, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Height (cm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Control, {\n            value: height,\n            onChange: e => setHeight(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"w-100\",\n          id: \"btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-0\",\n          children: \"BMI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: style.font,\n          children: bmi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lead\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"message-el\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: healthyWeight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: range\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Calculator, \"pAuQ3MgJH9CuSLjfOgGtGmvAH6c=\");\n\n_c = Calculator;\nexport default Calculator;\n/**\n * Refactor to auto update bmi - use hooks\n * \n * Enable metrics toggling\n * have a button html tag that gets modified with the inputted bmi\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","Button","style","Calculator","Group","Control","Label","weight","setWeight","height","setHeight","bmi","setBmi","message","setMessage","healthyWeight","setHealthyWeight","range","setRange","calBmi","e","container","document","getElementById","messageEl","alert","heightInMeter","toFixed","minBmi","maxBmi","minWeightCal","minWeight","Math","ceil","maxWeightCal","maxWeight","floor","reqWeightCal","reqWeight","className","classList","add","width","target","value","font"],"sources":["/Users/david/Desktop/bmi-calculator-main/src/components/Calculator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\nimport style from './Calculator.module.css'\n\nfunction Calculator() {\n    const { Group, Control, Label } = Form\n\n    const [weight, setWeight] = useState(0)\n    const [height, setHeight] = useState(0)\n    const [bmi, setBmi] = useState('')\n    const [message, setMessage] = useState('')\n    const [healthyWeight, setHealthyWeight] = useState('')\n    const [range, setRange] = useState('')\n    \n    const calBmi = (e) => {\n\n        const container = document.getElementById('container')\n        const messageEl = document.getElementById('message-el')\n        \n        if(weight === 0 || height === 0) {\n            return;\n        }\n        else {\n            alert(\"oops\")\n            let heightInMeter = (height / 100).toFixed(2)\n            let bmi = (weight /(heightInMeter * heightInMeter))\n            //min normal bmi value\n            let minBmi = 18.5\n\n            //max normal bmi value\n            let maxBmi = 25 \n\n            // min weight required for underweight category for normal weight \n            let minWeightCal = (minBmi * (heightInMeter * heightInMeter))\n            let minWeight = Math.ceil(minWeightCal * 100) / 100\n\n            // min weight required for overweight category for normal weight\n            let maxWeightCal = (maxBmi * (heightInMeter * heightInMeter))\n            let maxWeight = Math.floor(maxWeightCal * 100) / 100\n\n            let reqWeightCal = 0\n            let reqWeight = 0\n            setBmi(bmi.toFixed(1))\n            \n            // bmi check for underweight\n            if(bmi >= 9 && bmi < 18.5) {\n                if( bmi >= 9 && bmi < 15) {\n                    setMessage('very severely underweight')\n                    reqWeightCal = minWeight - weight\n                    reqWeight = ((reqWeightCal * 100) / 100).toFixed(2)\n                    setHealthyWeight(`+${reqWeight} kgs for healthy weight`)\n                    setRange(`${minWeight} - ${maxWeight}`)\n                    container.className = ''\n                    container.classList.add('bg-warning')\n                    messageEl.className = ''\n                    messageEl.classList.add('text-warning')\n                }\n                else if (bmi >= 15 && bmi < 16) {\n                    setMessage('severely underweight')\n                    reqWeightCal = minWeight - weight\n                    reqWeight = ((reqWeightCal * 100) / 100).toFixed(2)\n                    setHealthyWeight(`+${reqWeight} kgs for healthy weight`)\n                    setRange(`${minWeight} - ${maxWeight}`)\n                    container.className = ''\n                    container.classList.add('bg-warning') \n                    messageEl.className = ''\n                    messageEl.classList.add('text-warning')\n                }\n                else{\n                    setMessage('underweight')\n                    reqWeightCal = minWeight - weight\n                    reqWeight =  ((reqWeightCal * 100) / 100).toFixed(2)\n                    setHealthyWeight(`+${reqWeight} kgs for healthy weight`)\n                    setRange(`${minWeight} - ${maxWeight}`)\n                    container.className = ''\n                    container.classList.add('bg-warning')\n                    messageEl.className = ''\n                    messageEl.classList.add('text-warning')\n                }\n            }\n            // bmi check for normal\n            else if(bmi >= 18.5 && bmi <= 25) {\n                setMessage('normal')\n                setHealthyWeight(`Healthy weight`)\n                setRange(`${minWeight} - ${maxWeight}`)\n                container.className = ''\n                container.classList.add('bg-success')\n                messageEl.className = ''\n                messageEl.classList.add('text-success')\n            }\n            // bmi check for overweight\n            else if(bmi > 25 && bmi < 50) {\n                if (bmi > 25 && bmi < 30){\n                    setMessage('overweight')\n                    reqWeightCal = weight - maxWeight\n                    reqWeight =  ((reqWeightCal * 100) / 100).toFixed(2)\n                    setHealthyWeight(`-${reqWeight} kgs for healthy weight`)\n                    setRange(`${minWeight} - ${maxWeight}`)\n                    container.className = ''\n                    container.classList.add('bg-danger')\n                    messageEl.className = ''\n                    messageEl.classList.add('text-danger')\n                } \n                else if(bmi >= 30 && bmi < 35) {\n                    setMessage('obese Class I')\n                    reqWeightCal = weight - maxWeight\n                    reqWeight =  ((reqWeightCal * 100) / 100).toFixed(2)\n                    setHealthyWeight(`-${reqWeight} kgs for healthy weight`)\n                    setRange(`${minWeight} - ${maxWeight}`)\n                    container.className = ''\n                    container.classList.add('bg-danger')\n                    messageEl.className = ''\n                    messageEl.classList.add('text-danger')\n                }\n                else if(bmi >= 35 && bmi < 40) {\n                    setMessage('obese Class II')\n                    reqWeightCal = weight - maxWeight\n                    reqWeight =  ((reqWeightCal * 100) / 100).toFixed(2)\n                    setHealthyWeight(`-${reqWeight} kgs for healthy weight`)\n                    setRange(`${minWeight} - ${maxWeight}`)\n                    container.className = ''\n                    container.classList.add('bg-danger')\n                    messageEl.className = ''\n                    messageEl.classList.add('text-danger')\n                }\n                else {\n                    setMessage('obese Class III')\n                    reqWeightCal = weight - maxWeight\n                    reqWeight =  ((reqWeightCal * 100) / 100).toFixed(2)\n                    setHealthyWeight(`-${reqWeight} kgs for healthy weight`)\n                    setRange(`${minWeight} - ${maxWeight}`)\n                    container.className = ''\n                    container.classList.add('bg-danger')\n                    messageEl.className = ''\n                    messageEl.classList.add('text-danger')\n                }\n            }\n            else {\n                setBmi('')\n                setMessage('')\n                setHealthyWeight('')\n                setRange('')\n            }\n        }\n    }\n\n    useEffect(() => {\n        calBmi();\n      }, [weight, height]);\n      \n\n    return (\n        <>  \n            <Card style={{ width: \"26rem\" }} border='light' className='p-4 shadow'>\n                <h2 className='text-center mb-3'>BMI Calculator</h2>\n                <Form className='mb-3 px-3' onSubmit={calBmi} id='bmiForm'>\n                    <Group className='mb-3'>\n                        <Label>Weight (kg)</Label>\n                        <Control value={weight} onChange={(e) => setWeight(e.target.value)} />\n                    </Group>\n                    <Group className='mb-4'>\n                        <Label>Height (cm)</Label>\n                        <Control value={height} onChange={(e) => setHeight(e.target.value)} />\n                    </Group>\n                    <Button type='submit' variant='primary' className='w-100' id='btn'>Submit</Button>\n                </Form>\n                <div className='text-center'>\n                    <h3 className='mb-0'>BMI</h3>\n                    <h3 className={style.font}>{bmi}</h3>\n                    <div className=\"lead\">\n                        <div id='message-el'>\n                            <h5>{message}</h5>\n                        </div>\n                            <h6>{ healthyWeight }</h6>\n                            <h6>{ range }</h6>\n                    </div>\n                </div>\n            </Card>\n        </>\n    )\n}\n\nexport default Calculator\n\n/**\n * Refactor to auto update bmi - use hooks\n * \n * Enable metrics toggling\n * have a button html tag that gets modified with the inputted bmi\n */"],"mappings":"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"},"metadata":{},"sourceType":"module"}